from uuid import uuid4
from json import dumps
from werkzeug.exceptions import HTTPException, default_exceptions
from flask import Flask, redirect, request, abort, render_template,flash, jsonify, Response

import logging

APP = Flask(__name__)

APP.config.update(
    DEBUG = True,
    SECRET_KEY = uuid4().hex
)

@APP.route('/')
def home():
    obj = {'count':0,'emails':[]}
    lines = []
    try:
        with open('emails.txt') as f:
            obj['emails'] = f.read().splitlines() 
            obj['count'] = len(obj['emails'])
    except:
        pass
    return Response(dumps(obj),  mimetype='application/json')

def handle_all_errors(error):
    code = 500
    if isinstance(error, HTTPException):
        code = error.code
    return render_template('index.html', content='error', value='Error {}'.format(str(uuid4())))

for exc in default_exceptions:
    APP.register_error_handler(exc, handle_all_errors)

APP.run(host='0.0.0.0', port=5143)
